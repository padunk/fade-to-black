// Auth
export interface Login {
    email: string
    password: string
}

export interface SignUp extends Login {
    userName: string;
}

export interface AuthError {
    errorMessage: string;
    loading: boolean
}

// Users
export interface UserCredentials {
    bio: string;
    createdAt: number;
    email: string;
    imageURL: string;
    location: string;
    updatedAt: number;
    userID: string;
    userName: string;
    website: string;
}

export interface Likes {
    userName: string;
    whisperID: string;
}

export interface Notifications {
    createdAt: number;
    read: boolean;
    recipient: string;
    sender: string;
    type: string;
    whisperID: string;
}

export interface User {
    authenticated: boolean;
    credentials: UserCredentials | null;
    likes: Likes[];
    notifications: Notifications[];
}

// Whisper
export interface Whisper {
    body: string;
    commentCount: number;
    createdAt: number;
    id?: string;
    lifeTime: number;
    likeCount: number;
    userImage: string;
    userName: string;
};

// Redux
export interface RootState {
    user: User;
    ui: AuthError;
}
